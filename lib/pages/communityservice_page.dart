import 'package:flutter/material.dart';

class CommunityServicePage extends StatefulWidget {
  @override
  _CommunityServicePageState createState() => _CommunityServicePageState();
}

class _CommunityServicePageState extends State<CommunityServicePage> {
  String selectedTerm = '2024-2025'; // K·ª≥ h·ªçc m·∫∑c ƒë·ªãnh

  // Danh s√°ch ho·∫°t ƒë·ªông
  final List<Map<String, String>> activities = [
    {
      "name": "Spring Boot Workshop 131",
      "description": "A hands-on workshop on Spring Boot development.",
      "startDate": "3/10/2025",
      "endDate": "4/20/2025",
      "location": "Khu A",
      "points": "20",
      "term": "2024-2025"
    },
    {
      "name": "T√¨nh nguy·ªán M√πa H√® Xanh",
      "description": "Ch∆∞∆°ng tr√¨nh t√¨nh nguy·ªán gi√∫p ƒë·ª° c·ªông ƒë·ªìng.",
      "startDate": "6/15/2025",
      "endDate": "7/30/2025",
      "location": "Mi·ªÅn T√¢y",
      "points": "20",
      "term": "2024-2025"
    },
    {
      "name": "Hi·∫øn M√°u Nh√¢n ƒê·∫°o",
      "description": "Ch∆∞∆°ng tr√¨nh hi·∫øn m√°u t√¨nh nguy·ªán c·ª©u ng∆∞·ªùi.",
      "startDate": "5/10/2025",
      "endDate": "5/10/2025",
      "location": "Tr∆∞·ªùng ƒêH ABC",
      "points": "15",
      "term": "2024-2025"
    },
    {
      "name": "D·ªçn D·∫πp M√¥i Tr∆∞·ªùng",
      "description": "Thu gom r√°c th·∫£i, b·∫£o v·ªá m√¥i tr∆∞·ªùng s·ªëng.",
      "startDate": "4/22/2025",
      "endDate": "4/22/2025",
      "location": "C√¥ng vi√™n XYZ",
      "points": "20",
      "term": "2024-2025"
    },
    {
      "name": "D·∫°y H·ªçc Mi·ªÖn Ph√≠",
      "description": "H·ªó tr·ª£ d·∫°y h·ªçc mi·ªÖn ph√≠ cho tr·∫ª em kh√≥ khƒÉn.",
      "startDate": "8/5/2025",
      "endDate": "12/5/2025",
      "location": "Nh√† VƒÉn H√≥a",
      "points": "20",
      "term": "2024-2025"
    },
    {
      "name": "Hackathon 2023",
      "description": "Cu·ªôc thi l·∫≠p tr√¨nh d√†nh cho sinh vi√™n.",
      "startDate": "10/10/2023",
      "endDate": "10/12/2023",
      "location": "Tr∆∞·ªùng ƒêH XYZ",
      "points": "25",
      "term": "2023-2024"
    },
    {
      "name": "T√¨nh nguy·ªán ƒê√¥ng 2023",
      "description": "Ch∆∞∆°ng tr√¨nh t√¨nh nguy·ªán m√πa ƒë√¥ng.",
      "startDate": "12/1/2023",
      "endDate": "12/20/2023",
      "location": "Mi·ªÅn B·∫Øc",
      "points": "25",
      "term": "2023-2024"
    },
    {
      "name": "Hi·∫øn M√°u Nh√¢n ƒê·∫°o 2022",
      "description": "Ch∆∞∆°ng tr√¨nh hi·∫øn m√°u t√¨nh nguy·ªán nƒÉm 2022.",
      "startDate": "5/10/2022",
      "endDate": "5/10/2022",
      "location": "Tr∆∞·ªùng ƒêH DEF",
      "points": "15",
      "term": "2022-2023"
    },
  ];

  // L·ªçc ho·∫°t ƒë·ªông theo k·ª≥ h·ªçc ƒë√£ ch·ªçn
  List<Map<String, String>> get filteredActivities {
    return activities.where((activity) => activity["term"] == selectedTerm).toList();
  }

  // T√≠nh t·ªïng ƒëi·ªÉm c·ªßa c√°c ho·∫°t ƒë·ªông trong k·ª≥ h·ªçc ƒë√£ ch·ªçn
  int get totalPoints {
    return filteredActivities.fold(0, (sum, activity) => sum + int.parse(activity["points"]!));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        centerTitle: true,
        title: Text(
          "Ph·ª•c v·ª• c·ªông ƒë·ªìng",
          style: TextStyle(color: Colors.blue[900], fontWeight: FontWeight.bold),
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Dropdown ch·ªçn k·ª≥ h·ªçc
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text(
                  "Ch·ªçn k·ª≥ h·ªçc:",
                  style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                ),
                DropdownButton<String>(
                  value: selectedTerm,
                  items: [
                    '2021-2022', '2022-2023', '2023-2024', '2024-2025', '2025-2026'
                  ]
                      .map((term) => DropdownMenuItem(value: term, child: Text(term)))
                      .toList(),
                  onChanged: (newValue) {
                    setState(() {
                      selectedTerm = newValue!;
                    });
                  },
                ),
              ],
            ),

            const SizedBox(height: 5),

            // Hi·ªÉn th·ªã ƒëi·ªÉm ph·ª•c v·ª• c·ªông ƒë·ªìng
            Container(
              padding: const EdgeInsets.all(12),
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.circular(8),
                boxShadow: [
                  BoxShadow(color: Colors.grey.shade300, blurRadius: 5, spreadRadius: 1),
                ],
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text("ƒêi·ªÉm ph·ª•c v·ª• c·ªông ƒë·ªìng", style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
                  const SizedBox(height: 5),
                  Text("$totalPoints/100", style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.blue)),
                ],
              ),
            ),

            const SizedBox(height: 10),

            // Ti√™u ƒë·ªÅ danh s√°ch ho·∫°t ƒë·ªông
            Text("Danh s√°ch ho·∫°t ƒë·ªông", style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold,color: Colors.black)),

            const SizedBox(height: 20),

            // Danh s√°ch ho·∫°t ƒë·ªông ƒë√£ l·ªçc
            Expanded(
              child: ListView.builder(
                itemCount: filteredActivities.length, // S·ªë l∆∞·ª£ng ho·∫°t ƒë·ªông ƒë√£ l·ªçc
                physics: const AlwaysScrollableScrollPhysics(),
                itemBuilder: (context, index) {
                  var activity = filteredActivities[index];
                  return ActivityCard(activity: activity);
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// Widget ri√™ng cho m·ªói card ho·∫°t ƒë·ªông
class ActivityCard extends StatelessWidget {
  final Map<String, String> activity;

  const ActivityCard({Key? key, required this.activity}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Card(
      elevation: 3,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
      margin: const EdgeInsets.only(bottom: 10),
      child: Padding(
        padding: const EdgeInsets.all(12),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(activity["name"]!, style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
            const SizedBox(height: 5),
            Text(activity["description"]!, style: TextStyle(color: Colors.grey[700])),
            const SizedBox(height: 10),
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text("üìÖ ${activity["startDate"]} - ${activity["endDate"]}"),
                Text("üìç ${activity["location"]}"),
              ],
            ),
            const SizedBox(height: 10),
            Text("‚≠ê ƒêi·ªÉm: ${activity["points"]}", style: TextStyle(color: Colors.blue, fontWeight: FontWeight.bold)),
          ],
        ),
      ),
    );
  }
}