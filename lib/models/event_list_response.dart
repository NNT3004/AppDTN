import 'package:app_dtn/models/event.dart';
import 'package:flutter/foundation.dart';

class EventListResponse {
  final List<Event> events;
  final int totalPage;

  EventListResponse({required this.events, required this.totalPage});

  factory EventListResponse.fromJson(Map<String, dynamic> json) {
    try {
      // Ghi log ƒë·ªÉ ki·ªÉm tra c·∫•u tr√∫c JSON nh·∫≠n ƒë∆∞·ª£c
      debugPrint('üîç Parsing JSON data: ${json.keys.toList()}');

      // X·ª≠ l√Ω tr∆∞·ªùng h·ª£p 'events' kh√¥ng ph·∫£i l√† list
      List<Event> eventsList = [];

      if (json.containsKey('events')) {
        if (json['events'] is List) {
          eventsList =
              (json['events'] as List)
                  .map((e) => Event.fromJson(e as Map<String, dynamic>))
                  .toList();
          debugPrint('‚úÖ Parsed ${eventsList.length} events from JSON');
        } else {
          debugPrint(
            '‚ö†Ô∏è Warning: events field is not a List: ${json['events']}',
          );
        }
      } else {
        debugPrint('‚ö†Ô∏è Warning: JSON does not contain events field');
        // Th·ª≠ xem c√≥ ph·∫£i API tr·∫£ v·ªÅ m·∫£ng tr·ª±c ti·∫øp kh√¥ng
        if (json is List) {
          eventsList =
              (json as List)
                  .map((e) => Event.fromJson(e as Map<String, dynamic>))
                  .toList();
          debugPrint('‚úÖ Parsed ${eventsList.length} events from direct array');
        }
      }

      // X·ª≠ l√Ω tr∆∞·ªùng h·ª£p 'totalPage' kh√¥ng ph·∫£i l√† int
      int totalPages = 0;
      if (json.containsKey('totalPage')) {
        if (json['totalPage'] is int) {
          totalPages = json['totalPage'];
        } else if (json['totalPage'] != null) {
          totalPages = int.tryParse(json['totalPage'].toString()) ?? 0;
          debugPrint('‚ö†Ô∏è Warning: totalPage not an int: ${json['totalPage']}');
        }
      } else if (json.containsKey('totalPages')) {
        // Ki·ªÉm tra t√™n tr∆∞·ªùng kh√°c
        if (json['totalPages'] is int) {
          totalPages = json['totalPages'];
        } else if (json['totalPages'] != null) {
          totalPages = int.tryParse(json['totalPages'].toString()) ?? 0;
        }
      }

      return EventListResponse(events: eventsList, totalPage: totalPages);
    } catch (e) {
      debugPrint('‚ùå Error parsing EventListResponse: $e');
      debugPrint('üìÑ JSON data: $json');
      // Tr·∫£ v·ªÅ ƒë·ªëi t∆∞·ª£ng r·ªóng thay v√¨ n√©m l·ªói
      return EventListResponse(events: [], totalPage: 0);
    }
  }

  Map<String, dynamic> toJson() {
    return {
      'events': events.map((event) => event.toJson()).toList(),
      'totalPage': totalPage,
    };
  }
}
